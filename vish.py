import asyncio
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import (
    Message, 
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)

API_TOKEN = "8453813923:AAHzP4w2Wxknyb9S7HZQDtG87sIR8ui1RvE"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# --- –ö–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ (Reply) ---
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìã –ú–µ–Ω—é")],
        [KeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ"), KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")]
    ],
    resize_keyboard=True
)

# --- Inline –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º ---
inline_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="‚ö°Ô∏è –î–µ–π—Å—Ç–≤–∏–µ 1", callback_data="action1"),
            InlineKeyboardButton(text="üî• –î–µ–π—Å—Ç–≤–∏–µ 2", callback_data="action2")
        ],
        [
            InlineKeyboardButton(text="üíé –î–µ–π—Å—Ç–≤–∏–µ 3", callback_data="action3")
        ]
    ]
)


# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç üëã\n–í—ã–±–∏—Ä–∞–π –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É –∏–ª–∏ –∂–º–∏ –Ω–∞ –º–µ–Ω—é:",
        reply_markup=main_menu
    )

# --- –ö–æ–≥–¥–∞ –∂–º—É—Ç –Ω–∞ üìã –ú–µ–Ω—é (Reply-–∫–Ω–æ–ø–∫–∞) ---
@dp.message(lambda msg: msg.text == "üìã –ú–µ–Ω—é")
async def show_inline(message: Message):
    await message.answer(
        "–í–æ—Ç —Ç–≤–æ–µ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π üëá",
        reply_markup=inline_menu
    )

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ Inline-–∫–Ω–æ–ø–æ–∫ ---
@dp.callback_query()
async def process_callback(callback_query):
    data = callback_query.data

    if data == "action1":
        await callback_query.message.answer("‚ö°Ô∏è –í—ã–ø–æ–ª–Ω–∏–ª–æ—Å—å –¥–µ–π—Å—Ç–≤–∏–µ 1")
    elif data == "action2":
        await callback_query.message.answer("üî• –í—ã–ø–æ–ª–Ω–∏–ª–æ—Å—å –¥–µ–π—Å—Ç–≤–∏–µ 2")
    elif data == "action3":
        await callback_query.message.answer("üíé –í—ã–ø–æ–ª–Ω–∏–ª–æ—Å—å –¥–µ–π—Å—Ç–≤–∏–µ 3")

    await callback_query.answer()  # –∑–∞–∫—Ä—ã–≤–∞–µ—Ç "—á–∞—Å–∏–∫–∏" —É –∫–Ω–æ–ø–∫–∏


# --- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (Reply) ---
@dp.message(lambda msg: msg.text == "‚ÑπÔ∏è –û –±–æ—Ç–µ")
async def about(message: Message):
    await message.answer("–Ø –±–æ—Ç-—à–∞–±–ª–æ–Ω ü§ñ, —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å –∏ —Å Reply, –∏ —Å Inline –∫–Ω–æ–ø–∫–∞–º–∏.")

@dp.message(lambda msg: msg.text == "‚ùì –ü–æ–º–æ—â—å")
async def help_command(message: Message):
    await message.answer("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:\n"
                         "üìã –ú–µ–Ω—é ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å Inline-–¥–µ–π—Å—Ç–≤–∏—è\n"
                         "‚ÑπÔ∏è –û –±–æ—Ç–µ ‚Äì –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
                         "‚ùì –ü–æ–º–æ—â—å ‚Äì —Å–ø—Ä–∞–≤–∫–∞")

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())